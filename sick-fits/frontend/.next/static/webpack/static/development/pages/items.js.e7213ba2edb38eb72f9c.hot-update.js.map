{"version":3,"file":"static/webpack/static/development/pages/items.js.e7213ba2edb38eb72f9c.hot-update.js","sources":["webpack:///./components/DeleteItem.js"],"sourcesContent":["import React, { Component } from 'react'\nimport { Mutation } from 'react-apollo'\nimport gql from 'graphql-tag'\nimport { ALL_ITEMS_QUERY } from './Items.js';\n\nconst DELETE_ITEM_MUTATION = gql`\n  mutation DELETE_ITEM_MUTATION($id: ID!) {\n    deleteItem(id: $id) {\n      id\n    }\n  }\n`;\n\nclass DeleteItem extends Component {\n  update = (cache, payload) => {\n    // manually update cache on client, so it matches server\n    // read cache for items we want\n    const data = cache.readQuery({ query: ALL_ITEMS_QUERY })\n    console.log(data)\n    // filter deleted item out of page\n    data.items = data.items.filter(item => item.id !== payload.data.deleteItem.id)\n    // put items back\n    cache.writeQuery({query: ALL_ITEMS_QUERY, data})\n  }\n  render() {\n    return (\n      <Mutation mutation={DELETE_ITEM_MUTATION} variables={{\n        id: this.props.id\n      }} update={this.update}>\n      {(deleteItem, { error }) => (\n        <button onClick={() => {\n          if(confirm('Are you sure you want to delete this item?')) {\n            deleteItem();\n          }\n        }}>{this.props.children}</button>\n      )}\n      </Mutation>\n    )\n  }\n}\n\nexport default DeleteItem;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AAOA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAEA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AASA;;;;AAzBA;AACA;AA2BA;;;;A","sourceRoot":""}